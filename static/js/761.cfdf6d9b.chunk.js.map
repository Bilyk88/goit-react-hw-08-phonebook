{"version":3,"file":"static/js/761.cfdf6d9b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.styled.js","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as StyledForm, Field as StyledField, ErrorMessage as ErrorMessageStyled} from 'formik';\n\nexport const Form = styled(StyledForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 360px;\n`;\nexport const Field = styled(StyledField)`\n  padding: 4px;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 360px;\n`;\nexport const Button = styled.button`\n  max-width: 160px;\n  padding: 5px;\n`;\n\nexport const ErrorMessage = styled(ErrorMessageStyled)`\n  color: red;\n  font-size: 12px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Button,\n  ErrorMessage,\n  FormGroup,\n  Field,\n  Form,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/api';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .min(7, 'Too Short!')\n    .max(10, 'Too Long!')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onAdd = newContact => {\n    if (contacts.some(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactSchema}\n      onSubmit={(values, actions) => {\n        actions.resetForm();\n        onAdd(values);\n      }}\n    >\n      <Form action=\"submit\">\n        <FormGroup>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n        <FormGroup>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormGroup>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactStyled = styled.li`\n  width: 300px;\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nexport const Button = styled.button`\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  padding: 2px 6px;\n  background-color: #eb9da7;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #e84a5f;\n  }\n`;\n","import { Button, ContactStyled } from './Contacts.styled';\n\nexport const ContactItem = ({ id, name, number, onDelete }) => {\n  return (\n    <ContactStyled>\n      <div>\n        <span>{name}: </span>\n        <span>{number}</span>\n      </div>\n      <Button type=\"button\" onClick={() => onDelete(id)}>\n        Delete\n      </Button>\n    </ContactStyled>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem';\nimport { getContacts, getFilter } from '../../redux/selectors';\nimport { deleteContact } from '../../redux/api';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const onDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {filterContacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDelete={onDelete}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\nimport { getFilter } from '../../redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const updateFilter = newFilter => {\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <div style={{ margin: '30px 0' }}>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => updateFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/Contacts/ContactList';\nimport { getIsLoading } from '../redux/selectors';\nimport { fetchContacts } from '../redux/api';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","StyledForm","_templateObject","_taggedTemplateLiteral","Field","StyledField","_templateObject2","FormGroup","_templateObject3","Button","_templateObject4","ErrorMessage","ErrorMessageStyled","_templateObject5","contactSchema","Yup","shape","name","min","required","number","max","ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","resetForm","some","contact","alert","concat","addContact","children","_jsxs","action","type","component","ContactStyled","ContactItem","_ref","id","onDelete","onClick","ContactList","filter","getFilter","filterContacts","toLowerCase","includes","contactId","deleteContact","map","Filter","style","margin","value","onChange","e","newFilter","target","setFilter","Contacts","isLoading","getIsLoading","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}